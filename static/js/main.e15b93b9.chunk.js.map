{"version":3,"sources":["static/demo_image.png","../../src/AutocompleteCommandField.js","../../src/CommandRow.js","../../src/CommandsList.js","../../src/index.js","App.js","index.js"],"names":["module","exports","withStyles","theme","root","backgroundColor","display","width","margin","inputField","flex","border","boxShadow","color","input","paddingLeft","fontSize","lineHeight","classes","fieldValue","onChange","onKeyPress","className","value","autoFocus","onKeyDown","fullWidth","InputProps","disableUnderline","minHeight","padding","textAlign","rootHighlighted","button","flexGrow","cmdIcon","height","shortcut","background","borderRadius","maxHeight","minWidth","marginLeft","marginTop","command","commandName","isHighlighted","onHover","onClick","rootStyle","ref","onMouseEnter","item","container","justify","xs","md","variant","align","overflowY","scrollbarColor","commands","highlightedCmdName","setHighlightedCallback","handleEnter","ignoreHover","toggleIgnoreHover","Object","key","onHoverCallback","paperRoot","backdropRoot","dialogTitle","titleSection","flexDirection","marginBottom","title","dialogBody","overflow","divider","noOptionsText","isOpen","toggleIsModalOpen","logo","commandsInternal","properties","useRef","useState","inputValue","setInputValue","possibleCommands","setPossibleCommands","setHighlightedCmdName","setIgnoreHover","keysArray","currSelectedIndex","selectedCommandName","direction","changeHighlightedCmd","open","onClose","PaperProps","BackdropProps","TransitionProps","timeout","id","newSearchTerm","event","inputToSearch","searchTerm","tempPossibleCommands","setPossibleCommandsWithSearchTerm","handleCommandSelected","onArrowsPress","previousState","headline","ctaText","fontWeight","cmd","listBullet","marginRight","footer","cmdLineModal","setCmdLineModal","lastRunCmd","setLastRunCmd","SEARCH_CONTACT","name","callback","ADD_CONTACT","DELETE_CONTACT","UPDATE_CONTACT","REACH_OUT_CONTACT","toggleIsOpen","handlers","TOGGLE_MODAL","configure","ignoreTags","ignoreEventsCondition","keyMap","Grid","alignItems","spacing","Typography","role","aria-label","src","require","alt","List","dense","ListItem","ListItemText","primary","primaryTypographyProps","Link","href","target","rel","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.e15b93b9.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/demo_image.be4e42ce.png\";","import React, {useState} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport TextField from '@material-ui/core/TextField';\n\n\nconst useStyles = (theme) => ({\n  root: {\n    backgroundColor: '#212121',\n    display: 'flex',\n    width: '100%',\n    margin: '24px 0',\n  },\n  inputField: {\n    flex: '1',\n    border: 'none',\n    boxShadow: 'inset 3px 0 0 #dcb865',\n    backgroundColor: 'inherit',\n    color: '#b7babe',\n  },\n  input: {\n    color: '#f1f2f2',\n    paddingLeft: '30px',\n    fontSize: '21px',\n    lineHeight: '28px',\n  }\n});\n\nconst AutocompleteCommandField = ({classes, fieldValue, onChange, onKeyPress}) => {\n  return (\n    <div className={classes.root}>\n      <TextField className={classes.inputField} value={fieldValue} onChange={onChange} autoFocus={true} onKeyDown={onKeyPress}\n                 fullWidth InputProps={{className: classes.input, disableUnderline: true}}/>\n    </div>\n  )\n}\n\nexport default withStyles(useStyles)(AutocompleteCommandField);\n","import React from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Grid from \"@material-ui/core/Grid\";\nimport ButtonBase from '@material-ui/core/ButtonBase';\nimport Typography from \"@material-ui/core/Typography\";\n\nconst useStyles = (theme) => ({\n  root: {\n    color: '#b7babe',\n    minHeight: '60px',\n    padding: '20px 36px',\n    width: '100%',\n    textAlign: 'left',\n  },\n  rootHighlighted: {\n    minHeight: '60px',\n    padding: '20px 36px',\n    width: '100%',\n    textAlign: 'left',\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n    color: '#ffffffe6',\n  },\n  button: {\n    flexGrow: '1',\n  },\n  cmdIcon: {\n    width: '20px',\n    height: '20px',\n  },\n  shortcut: {\n    background: 'rgba(255, 255, 255, 0.15)',\n    borderRadius: '3px',\n    maxHeight: '18px',\n    minWidth: '19px',\n    marginLeft: '4px',\n    padding: \"1px 5px 5px 5px\",\n    marginTop: \"3px\",\n  }\n});\n\nconst CommandRow = ({classes, command, commandName, isHighlighted, onHover, onKeyPress, onClick, ref}) => {\n  const rootStyle = isHighlighted ? classes.rootHighlighted : classes.root;\n\n  return (\n    <ButtonBase ref={command['ref']} className={rootStyle} onClick={onClick} onMouseEnter={() => onHover(commandName)} onKeyPress={onKeyPress}>\n      <Grid item container className={classes.button} justify=\"space-between\">\n        <Grid item xs={10} md={8}>\n          <Grid container>\n            <Grid item className={classes.cmdIcon} xs={1}>\n              {command['logo']}\n            </Grid>\n            <Grid>\n              <Typography variant=\"body1\">{command['name']}</Typography>\n            </Grid>\n          </Grid>\n        </Grid>\n        <Grid item>\n          {command['shortcut'] && <Typography className={classes.shortcut} variant=\"body2\" align=\"center\">{command['shortcut']}</Typography>}\n        </Grid>\n      </Grid>\n    </ButtonBase>\n  )\n}\n\nexport default withStyles(useStyles)(CommandRow);\n","import React from \"react\";\nimport CommandRow from \"./CommandRow\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\n\nconst useStyles = (theme) => ({\n  root: {\n    maxHeight: '240px',\n    overflowY: 'scroll',\n    scrollbarColor: '#757474',\n  },\n})\n\nconst CommandsList = ({classes, commands, highlightedCmdName, setHighlightedCallback, handleEnter, ignoreHover, toggleIgnoreHover}) => {\n  function onHoverCallback(hoveredCmdName) {\n    if (!ignoreHover) {\n      setHighlightedCallback(hoveredCmdName);\n    } else {\n      toggleIgnoreHover();\n    }\n  }\n\n  return (\n    <div className={classes.root}>\n      {Object.keys(commands).map((command, _) => {\n          return <CommandRow key={command} commandName={command} command={commands[command]}\n                             isHighlighted={command === highlightedCmdName} onClick={handleEnter}\n                             onHover={onHoverCallback}/>\n        }\n      )}\n    </div>\n  )\n};\n\nexport default withStyles(useStyles)(CommandsList);","import React, {useState, useRef} from \"react\";\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport Dialog from \"@material-ui/core/Dialog\";\nimport DialogTitle from \"@material-ui/core/DialogTitle\";\nimport DialogContent from \"@material-ui/core/DialogContent\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Divider from \"@material-ui/core/Divider\";\nimport Typography from \"@material-ui/core/Typography\";\nimport AutocompleteCommandField from \"./AutocompleteCommandField\";\nimport CommandsList from \"./CommandsList\";\nimport OfflineBoltOutlined from \"@material-ui/icons/OfflineBoltOutlined\";\n\nconst useStyles = (theme) => ({\n  paperRoot: {\n    padding: '10px 0 10px 0',\n    minWidth: '760px',\n    maxHeight: '380px',\n    backgroundColor: '#212121',\n    borderRadius: '4px',\n    boxShadow: '0 5px 10px 0 rgba(0, 0, 0, 0.7), 0 0px 10px 0 #000, 0.15px 0.5px 0 0 rgba(255, 255, 255, 0.1) inset'\n  },\n  backdropRoot: {\n    backgroundColor: 'transparent',\n  },\n  dialogTitle: {\n    margin: '12px 36px',\n    padding: '0px',\n  },\n  titleSection: {\n    color: '#d4d6d8',\n    display: 'flex',\n    flexDirection: 'row',\n    marginBottom: '20px',\n  },\n  title: {\n    marginLeft: '8px',\n  },\n  dialogBody: {\n    padding: '0px',\n    overflow: 'hidden',\n  },\n  divider: {\n    backgroundColor: 'rgba(255, 255, 255, 0.1)',\n  },\n  noOptionsText: {\n    color: '#d4d6d8',\n    padding: '12px 36px',\n  },\n});\n\n\nconst CommandLineModal = ({\n                            classes, commands, isOpen, toggleIsModalOpen, title,\n                            noOptionsText = \"No commands found. Try a different search term.\",\n                            logo = <OfflineBoltOutlined/>\n                          }) => {\n  let commandsInternal = {};\n  Object.entries(commands).map(([commandName, properties]) => {\n    commandsInternal[commandName] = {...properties, ref: useRef(null)}\n  });\n\n  const [inputValue, setInputValue] = useState('');\n  const [possibleCommands, setPossibleCommands] = useState(commandsInternal);\n  const [highlightedCmdName, setHighlightedCmdName] = useState(Object.keys(possibleCommands)[0]);\n  const [ignoreHover, setIgnoreHover] = useState(false);\n\n  function changeHighlightedCmd(commandName) {\n    setHighlightedCmdName(commandName);\n  }\n\n  function toggleIgnoreHover() {\n    setIgnoreHover(previousState => !previousState);\n  }\n\n  function setPossibleCommandsWithSearchTerm(searchTerm) {\n    const inputToSearch = searchTerm.toLowerCase();\n    let tempPossibleCommands = {};\n    Object.entries(commandsInternal).map(([commandName, properties]) => {\n      if (properties.name.toLowerCase().includes(inputToSearch)) {\n        tempPossibleCommands[commandName] = properties\n      }\n    });\n    setPossibleCommands(tempPossibleCommands);\n    changeHighlightedCmd(Object.keys(tempPossibleCommands)[0]);\n  }\n\n  function handleInputChange(event) {\n    const newSearchTerm = event.target.value;\n    setPossibleCommandsWithSearchTerm(newSearchTerm);\n    setInputValue(newSearchTerm);\n  }\n\n  function reset() {\n    setInputValue('');\n    setPossibleCommands(commandsInternal);\n    setHighlightedCmdName(Object.keys(commandsInternal)[0]);\n  }\n\n  function handleCommandSelected() {\n    if (highlightedCmdName) {\n      possibleCommands[highlightedCmdName]['callback']();\n      toggleIsModalOpen();\n      reset();\n    }\n  }\n\n  function onArrowsPress(direction) {\n    setIgnoreHover(true);\n    const keysArray = Object.keys(possibleCommands);\n    const currSelectedIndex = keysArray.indexOf(highlightedCmdName);\n\n    let selectedCommandName = null;\n    if (direction === \"down\") {\n      if (currSelectedIndex + 1 === keysArray.length) {\n        selectedCommandName = keysArray[0];\n      } else {\n        selectedCommandName = keysArray[currSelectedIndex + 1];\n      }\n    } else if (direction === \"up\") {\n      if (currSelectedIndex - 1 < 0) {\n        selectedCommandName = keysArray[keysArray.length - 1];\n      } else {\n        selectedCommandName = keysArray[currSelectedIndex - 1];\n      }\n    }\n\n    changeHighlightedCmd(selectedCommandName);\n    commandsInternal[selectedCommandName].ref.current.scrollIntoView();\n  }\n\n  function onKeyPress(event) {\n    if (event.which === 13 /* Enter */) {\n      handleCommandSelected();\n    } else if (event.which === 38 /* Arrow Up */) {\n      onArrowsPress('up');\n    } else if (event.which === 40 /* Arrow Down*/) {\n      onArrowsPress('down');\n    }\n  }\n\n  return (\n    <Dialog open={isOpen} onClose={toggleIsModalOpen} fullWidth PaperProps={{classes: {root: classes.paperRoot}}}\n            BackdropProps={{classes: {root: classes.backdropRoot}}} TransitionProps={{timeout: 0}}>\n      <DialogTitle id=\"form-dialog-title\" className={classes.dialogTitle}>\n        <div className={classes.titleSection}>\n          {logo}\n          <Typography variant=\"body1\" className={classes.title}>{title}</Typography>\n        </div>\n        <Divider className={classes.divider}/>\n      </DialogTitle>\n\n      <DialogContent className={classes.dialogBody}>\n        <Grid container>\n          <Grid item xs={12}>\n            <AutocompleteCommandField fieldValue={inputValue} onChange={handleInputChange} onKeyPress={onKeyPress}/>\n          </Grid>\n          <Grid item xs={12}>\n            {Object.keys(possibleCommands).length > 0 &&\n            <CommandsList commands={possibleCommands} highlightedCmdName={highlightedCmdName}\n                          setHighlightedCallback={changeHighlightedCmd} handleEnter={handleCommandSelected}\n                          ignoreHover={ignoreHover} toggleIgnoreHover={toggleIgnoreHover}/>\n            }\n            {Object.keys(possibleCommands).length === 0 &&\n            <Typography className={classes.noOptionsText} variant=\"body1\">{noOptionsText}</Typography>\n            }\n          </Grid>\n        </Grid>\n      </DialogContent>\n    </Dialog>\n  )\n}\n\nexport default withStyles(useStyles)(CommandLineModal);\n","import React, {useState} from 'react';\nimport withStyles from \"@material-ui/core/styles/withStyles\";\nimport {configure, GlobalHotKeys} from \"react-hotkeys\";\nimport AddCircleOutlineIcon from '@material-ui/icons/AddCircleOutline';\nimport RemoveCircleOutlineOutlinedIcon from '@material-ui/icons/RemoveCircleOutlineOutlined';\nimport SearchOutlinedIcon from '@material-ui/icons/SearchOutlined';\nimport UpdateOutlinedIcon from '@material-ui/icons/UpdateOutlined';\nimport OfflineBoltOutlined from \"@material-ui/icons/OfflineBoltOutlined\";\nimport CommandLineModal from \"react-super-cmd\";\nimport Grid from \"@material-ui/core/Grid\";\nimport Typography from \"@material-ui/core/Typography\";\nimport {Link, List, ListItem, ListItemText} from \"@material-ui/core\";\nimport FiberManualRecordIcon from '@material-ui/icons/FiberManualRecord';\nimport GitHubIcon from '@material-ui/icons/GitHub';\nimport LinkedInIcon from \"@material-ui/icons/LinkedIn\";\n\nconst useStyles = (theme) => ({\n  root: {\n    backgroundColor: '#fbfafa',\n    height: '100vh',\n    display: 'flex',\n    flexDirection: 'column',\n    flex: '1',\n    padding: '30px 30px 10px 30px',\n  },\n  headline: {\n    marginBottom: '10px',\n  },\n  ctaText: {\n    fontWeight: 'bold',\n  },\n  cmd: {\n    backgroundColor: '#dedede',\n  },\n  listBullet: {\n    fontSize: '10px',\n    marginRight: '3px',\n  },\n  footer: {\n    marginTop: '30px',\n  }\n});\n\nconst App = ({classes}) => {\n  const [cmdLineModal, setCmdLineModal] = useState(false);\n  const [lastRunCmd, setLastRunCmd] = useState(null);\n\n  const commands = {\n    SEARCH_CONTACT: {\n      name: 'Search', logo: <SearchOutlinedIcon/>, shortcut: 'S', callback: () => setLastRunCmd('SEARCH_CONTACT')\n    },\n    ADD_CONTACT: {\n      name: 'Add', logo: <AddCircleOutlineIcon/>, shortcut: '⌘ A', callback: () => setLastRunCmd('ADD_CONTACT')\n    },\n    DELETE_CONTACT: {\n      name: 'Delete', logo: <RemoveCircleOutlineOutlinedIcon/>, shortcut: '⌘ D', callback: () => setLastRunCmd('DELETE_CONTACT')\n    },\n    UPDATE_CONTACT: {\n      name: 'Update', logo: <UpdateOutlinedIcon/>, shortcut: null, callback: () => setLastRunCmd('UPDATE_CONTACT')\n    },\n    REACH_OUT_CONTACT: {\n      name: 'Reach out', logo: <UpdateOutlinedIcon/>, shortcut: 'ctrl+R', callback: () => setLastRunCmd('REACH_OUT_CONTACT')\n    }\n  }\n\n  function toggleIsOpen() {\n    setCmdLineModal(previousState => !previousState);\n  }\n\n  const keyMap = {TOGGLE_MODAL: \"cmd+k\"};\n  const handlers = {\n    TOGGLE_MODAL: () => {\n      toggleIsOpen();\n    },\n  };\n\n  configure({\n    ignoreTags: ['input', 'select', 'textarea'],\n    ignoreEventsCondition: function () {\n    }\n  });\n\n  return (\n    <GlobalHotKeys keyMap={keyMap} handlers={handlers}>\n      <Grid className={classes.root} container alignItems='center' spacing={2}>\n        <Grid item>\n          <Typography className={classes.headline} align=\"center\" variant=\"h4\">\n            react-super-cmd <span role=\"img\" aria-label=\"lightning-emoji\">⚡</span>\n          </Typography>\n          <Typography align=\"center\" variant=\"h6\">The command line experience for the no-mouse generation.</Typography>\n          <Typography align=\"center\" variant=\"h6\">A blazing fast command line for your users to seamlessly interact with your React app.</Typography>\n        </Grid>\n        {!lastRunCmd && <Grid item>\n          <Typography className={classes.ctaText} color=\"primary\" align=\"center\" variant=\"body1\">\n            Give it a spin <span role=\"img\" aria-label=\"point-emoji\">👉</span> Press <code className={classes.cmd}>cmd+k</code>\n          </Typography>\n        </Grid>}\n        {lastRunCmd && <Grid item>\n          <Typography variant=\"h4\">Command selected <code className={classes.cmd}>{lastRunCmd}</code></Typography>\n        </Grid>}\n        <Grid item>\n          <img width='500px' src={require('./static/demo_image.png')} alt=\"Command\"/>\n        </Grid>\n        <Grid item>\n          <Typography variant=\"h6\">Possible applications</Typography>\n          <List dense>\n            <ListItem>\n              <FiberManualRecordIcon className={classes.listBullet}/>\n              <ListItemText primary=\"In-app navigation\" primaryTypographyProps={{variant: \"body1\"}}/>\n            </ListItem>\n            <ListItem>\n              <FiberManualRecordIcon className={classes.listBullet} fontSize=\"small\"/>\n              <ListItemText primary=\"Search for contacts/items/files\" primaryTypographyProps={{variant: \"body1\"}}/>\n            </ListItem>\n            <ListItem>\n              <FiberManualRecordIcon className={classes.listBullet} fontSize=\"small\"/>\n              <ListItemText primary=\"Any other use cases requiring a list of options to select from\" primaryTypographyProps={{variant: \"body1\"}}/>\n            </ListItem>\n          </List>\n        </Grid>\n        <Grid item className={classes.footer}>\n          <Grid item>\n            <Typography variant={\"body1\"}>\n              <Link href=\"https://github.com/saharmor/react-super-cmd\" target=\"_blank\" rel=\"noreferrer\">\n                By Sahar Mor\n              </Link>\n            </Typography>\n          </Grid>\n          <Grid item container justify=\"center\" direction=\"row\" spacing={1}>\n            <Grid item>\n              <Link href=\"https://github.com/saharmor/react-super-cmd\" target=\"_blank\" rel=\"noreferrer\">\n                <GitHubIcon fontSize=\"small\"/>\n              </Link>\n            </Grid>\n            <Grid item>\n              <Link href=\"https://www.linkedin.com/in/sahar-mor/\" target=\"_blank\" rel=\"noreferrer\">\n                <LinkedInIcon/>\n              </Link>\n            </Grid>\n          </Grid>\n        </Grid>\n        <CommandLineModal commands={commands} isOpen={cmdLineModal} toggleIsModalOpen={toggleIsOpen}\n                          title={\"Super Command\"} logo={<OfflineBoltOutlined/>}/>\n      </Grid>\n    </GlobalHotKeys>\n  )\n}\n\nexport default withStyles(useStyles)(App);","import './index.css'\n\nimport React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\n\nReactDOM.render(<App/>, document.getElementById('root'))\n"],"sourceRoot":""}